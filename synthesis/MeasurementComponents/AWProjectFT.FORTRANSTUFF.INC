// -*- C++ -*-
    virtual void runFortranGet(Matrix<Double>& uvw,Vector<Double>& dphase,
			       Cube<Complex>& visdata,
			       IPosition& s,
			       //Cube<Complex>& gradVisAzData,
			       //Cube<Complex>& gradVisElData,
			       //IPosition& gradS,
			       Int& Conj,
			       Cube<Int>& flags,Vector<Int>& rowFlags,
			       Int& rownr,Vector<Double>& actualOffset,
			       Array<Complex>* dataPtr,
			       Int& aNx, Int& aNy, Int& npol, Int& nchan,
			       VisBuffer& vb,Int& Nant_p, Int& scanNo,
			       Double& sigma,
			       Array<Float>& raoffsets,
			       Array<Float>& decoffsets,
			       Double area,
			       Int& doGrad,Int paIndex);
    virtual void runFortranPut(Matrix<Double>& uvw,Vector<Double>& dphase,
			       const Complex& visdata_p,
			       IPosition& s,
			       //Cube<Complex>& gradVisAzData,
			       //Cube<Complex>& gradVisElData,
			       //IPosition& gradS,
		       Int& Conj,
		       Cube<Int>& flags,Vector<Int>& rowFlags,
		       const Matrix<Float>& weight,
		       Int& rownr,Vector<Double>& actualOffset,
		       Array<Complex>& dataPtr,
		       Int& aNx, Int& aNy, Int& npol, Int& nchan,
		       const VisBuffer& vb,Int& Nant_p, Int& scanNo,
		       Double& sigma,
		       Array<Float>& raoffsets,
		       Array<Float>& decoffsets,
		       Matrix<Double>& sumWeight,
		       Double& area,
		       Int& doGrad,
		       Int& doPSF,Int paIndex);
  void runFortranGetGrad(Matrix<Double>& uvw,Vector<Double>& dphase,
			 Cube<Complex>& visdata,
			 IPosition& s,
			 Cube<Complex>& gradVisAzData,
			 Cube<Complex>& gradVisElData,
			 //			 IPosition& gradS,
			 Int& Conj,
			 Cube<Int>& flags,Vector<Int>& rowFlags,
			 Int& rownr,Vector<Double>& actualOffset,
			 Array<Complex>* dataPtr,
			 Int& aNx, Int& aNy, Int& npol, Int& nchan,
			 VisBuffer& vb,Int& Nant_p, Int& scanNo,
			 Double& sigma,
			 Array<Float>& l_off,
			 Array<Float>& m_off,
			 Double area,
			 Int& doGrad,
			 Int paIndex);
